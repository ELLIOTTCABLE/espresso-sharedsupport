<?xml version="1.0" encoding="UTF-8"?>
<syntax name="sourcecode.php">
	<zones>
		<!-- PHP Source Block; <?php ... ?> -->
		<zone name="container.block.embedded.source.php">
			<starts-with>
				<expression>(&lt;)(\?)(php|=)?</expression>
				<capture number="0" name="delimiter.embedded.source.php.begin"/>
				<capture number="1" name="delimiter.left-angle.bracket.begin" />
				<capture number="2" name="delimiter.question-mark" />
				<capture number="3" name="keyword.definition.php" />
			</starts-with>
			<ends-with>
				<expression>(\?)(>)</expression>
				<capture number="0" name="delimiter.embedded.source.php.end"/>
				<capture number="1" name="delimiter.question-mark"/>
				<capture number="2" name="delimiter.right-angle.bracket.begin" />
			</ends-with>
			<subzones>
				<include collection="language" />
			</subzones>
		</zone>
	</zones>
	
	<library>
	    <!-- Includes all other collections -->
	    <collection name="language">
	        <include collection="metadata.comment.phpDoc" />
	        <include collection="metadata.comment" />
	        <include collection="literal.collection" />
	        <include collection="container.class" />
	        <include collection="container.block" />
	        <include collection="container.function" />
	        <include collection="identifier.function" />
	        <include collection="identifier.variable" />
	        <include collection="identifier.class" />
	        <include collection="identifier.constant" />
	        <include collection="literal.keyword" />
	        <include collection="literal.string" />
	        <include collection="literal.numeric" />
	        <include collection="delimiter" />
	        <include collection="operator" />
	        <include collection="keyword" />
	    </collection>
	    
	    
	    <!-- phpDoc -->
	    <collection name="metadata.comment.phpDoc">
	        <zone name="metadata.comment.phpDoc.block">
	            <starts-with>
					<expression>\s*(/\*\*)</expression>
					<capture number="1" name="delimiter.separator.slash.double-asterisk.comment.begin"/>
				</starts-with>
				<ends-with>
					<expression>\s*(\*/)</expression>
					<capture number="1" name="delimiter.separator.single-asterisk.slash.comment.end"/>
				</ends-with>
				<subzones>
				    <zone name="metadata.comment.documentation.phpDoc.invalid.illegal.missing-asterisk">
        	            <expression>^(?!\s*\*).*$\n?</expression>
        	        </zone>
        	        <zone>
        	    		<expression>^\s*\*\s*(@access)\s+((public|private|protected)|(.+))\s*$</expression>
        	    		<capture number="1" name="metadata.comment.phpDoc.keyword"/>
        	    		<capture number="3" name="metadata.comment.phpDoc.storage.modifier"/>
        	    		<capture number="4" name="metadata.comment.phpDoc.invalid.illegal.wrong-access-typedoc"/>
        	    	</zone>
        	    	<zone name="metadata.comment.phpDoc.markup.underline.link">
        	    		<expression>((https?|s?ftp|ftps|file|smb|afp|nfs|(x-)?man|gopher|txmt)://|mailto:)[-:@a-zA-Z0-9_.~%+/?=&amp;#]+(?&lt;![.?:])</expression>
        	    	</zone>
        	    	<zone>
        	    		<expression>(@xlink)\s+(.+)\s*$</expression>
        	    		<capture number="1" name="metadata.comment.phpDoc.keyword"/>
        	    		<capture number="2" name="metadata.comment.phpDoc.markup.underline.link"/>
        	    	</zone>
        	    	<zone name="metadata.comment.phpDoc.keyword">
        	    		<expression>\@(a(bstract|uthor)|c(ategory|opyright)|example|global|internal|li(cense|nk)|pa(ckage|ram)|return|s(ee|ince|tatic|ubpackage)|t(hrows|odo)|v(ar|ersion)|uses|deprecated|final)\b</expression>
        	    	</zone>
        	    	<zone name="metadata.comment.phpDoc.meta.tag.inlinedoc">
        	    		<expression>\{(@(link)).+?\}</expression>
        	    		<capture number="1" name="metadata.comment.phpDoc.keyword"/>
        	    	</zone>
				</subzones>
			</zone>
	    </collection>
	    
	    
	    <!-- Metadata -->
	    <collection name="metadata.comment">
	        <!-- // comment -->
	        <zone name="metadata.comment.single-line.double-slash">
                <expression>(//)(\s?(.*)?$\n?)</expression>
                <capture number="1" name="delimiter.separator.double-slash.comment.punctuation.definitoin.begin" />
                <capture number="3" name="content" />
	        </zone>
	        <!-- # comment -->
	        <zone name="metadata.comment.line.hash">
                <expression>(#)(\s?(.*)?$\n?)</expression>
			    <capture number="1" name="delimiter.separator.hash.comment.begin" />
			    <capture number="3" name="content" />
	        </zone>
	        <zone name="metadata.comment.documentation">
				<starts-with>
					<expression>/(\*)+</expression>
					<capture number="0" name="delimiter.separator.slash.asterisk.comment.begin"/>
				</starts-with>
				<ends-with>
					<expression>(\*)+/</expression>
					<capture number="0" name="delimiter.separator.asterisk.slash.comment.end"/>
				</ends-with>
			</zone>
			
			<zone name="metadata.comment.block">
				<starts-with>
					<expression>(/\*)</expression>
					<capture number="1" name="delimiter.separator.slash.single-asterisk.comment.begin"/>
				</starts-with>
				<ends-with>
					<expression>(\*/)</expression>
					<capture number="1" name="delimiter.separator.slash.single-asterisk.comment.end"/>
				</ends-with>
			</zone>
	    </collection>
	    
	    
	    <!-- Literals -->
	    <collection name="literal.string">
            <zone name="literal.string.quoted.single">
                <starts-with>
                    <expression>'</expression>
                    <capture number="0" name="delimiter.balanced.quote.single.begin"/>
                </starts-with>
                <ends-with>
                    <expression>'</expression>
                    <capture number="0" name="delimiter.balanced.quote.single.end"/>
                </ends-with>
                <subzones>
                    <zone name="literal.escape.brief">
                        <!-- 'A single-quoted string with \'escape sequences\'' -->
                        <expression>(\\)('|\\)</expression>
                        <capture number="1" name="delimiter.seperator.escape"/>
                        <capture number="2" name="character"/>
                    </zone>
                </subzones>
            </zone>
            
            <zone name="literal.string.quoted.double">
                <starts-with>
                    <expression>"</expression>
                    <capture number="0" name="delimiter.balanced.quote.double.begin"/>
                </starts-with>
                <ends-with>
                    <expression>"</expression>
                    <capture number="0" name="delimiter.balanced.quote.double.begin"/>
                </ends-with>
                <subzones>
                    <include collection="identifier.variable" />
                    <zone name="literal.escape.brief">
                        <!-- 'A single-quoted string with \'escape sequences\'' -->
                        <expression>(\\)("|\\)</expression>
                        <capture number="1" name="delimiter.seperator.escape"/>
                        <capture number="2" name="character"/>
                    </zone>
                </subzones>
            </zone>
            
            <zone name="literal.string.unquoted.heredoc">
                <starts-with>
                    <expression>(&lt;&lt;&lt;-?)(\w+)</expression>
                </starts-with>
                <starts-with>
                    <expression>\2</expression>
                </starts-with>
            </zone>
	    </collection>
	    
        <collection name="literal.numeric">
            <!--
            I want to seperately hilight all the different types of
            literal.numerics. So, we have to provide multiple similar definitions
            of a literal.numeric.
            
            Grabbed from elliottcable's Ruby.sugar
            -->
            <!-- 01756 -->
            <zone name="literal.numeric.integer.octal">
                <expression>\b(0)([0-7]+)\b</expression>
                <capture number="1" name="numeric.delimiter.octal.initial-zero"/>
                <capture number="2" name="numeric.octal.value"/>
            </zone>
            <!-- 0b010010110 -->
            <zone name="literal.numeric.integer.binary">
                <expression>\b(0(?:b|B))([01]+)\b</expression>
                <capture number="1" name="numeric.delimiter.binary.initial-zero-b"/>
                <capture number="2" name="numeric.binary.value"/>
            </zone>
            <!-- 0xDEADBEEF586 -->
            <zone name="literal.numeric.integer.hex">
                <expression>\b(0(?:x|X))([0-9a-fA-F]+)\b</expression>
                <capture number="1" name="numeric.delimiter.hexadecimal.initial-zero-x"/>
                <capture number="2" name="numeric.hexadecimal.value"/>
            </zone>
            <!-- 142.87e3, 0.22e8 -->
            <zone name="literal.numeric.float.with-exponent">
                <expression>\b(0|[1-9][0-9]*)(\.)([0-9]+)(e|E)(-?[0-9]+)\b</expression>
                <capture number="1" name="integral.value"/>
                <capture number="2" name="delimiter.seperator.radix-point"/>
                <capture number="3" name="fractional.value"/>
                <capture number="4" name="literal.numeric.exponent.delimiter"/>
                <capture number="5" name="literal.numeric.exponent.value"/>
            </zone>
            <!-- 142.87, 0.22 -->
            <zone name="literal.numeric.float">
                <expression>\b(0|[1-9][0-9]*)(\.)([0-9]+)\b</expression>
                <capture number="1" name="integral.value"/>
                <capture number="2" name="delimiter.seperator.radix-point"/>
                <capture number="3" name="fractional.value"/>
            </zone>
            <!-- 142e3, 0e8 -->
            <zone name="literal.numeric.integer.decimal.with-exponent">
                <expression>\b(0|[1-9][0-9]*)(e|E)(-?[0-9]+)\b</expression>
                <capture number="1" name="integral.value"/>
                <capture number="2" name="literal.numeric.exponent.delimiter"/>
                <capture number="3" name="literal.numeric.exponent.value"/>
            </zone>
            <!-- 142e3, 0e8 -->
            <zone name="literal.numeric.integer.decimal">
                <expression>\b(0|[1-9][0-9]*)\b</expression>
                <capture number="1" name="integral.value"/>
            </zone>
        </collection>
        
        <collection name="literal.keyword">
            <!-- true -->
            <zone name="literal.keyword.bool.true">
            	<expression>\btrue\b</expression>
            </zone>
            <!-- false -->
            <zone name="literal.keyword.bool.false">
            	<expression>\bfalse\b</expression>
            </zone>
            <!-- null -->
            <zone name="literal.keyword.nothing.null">
            	<expression>\bnull\b</expression>
            </zone>
            <!-- echo -->
            <zone name="literal.keyword.constant.echo">
            	<expression>\becho\b</expression>
            </zone>
			<!-- print -->
            <zone name="literal.keyword.constant.print">
            	<expression>\bprint\b</expression>
            </zone>
        </collection>
    
	    <collection name="literal.collection">
	        <zone name="literal.collection.dictionary.array">
	            <starts-with>
                    <expression>(\barray\b)\s*(\()</expression>
                    <capture number="1" name="keyword.definition.array.begin" />
                    <capture number="2" name="delimiter.balanced.parenthesis.begin" />
                </starts-with>
                <ends-with>
                    <expression>\)</expression>
                    <capture number="0" name="delimiter.balanced.parenthesis.end" />
                </ends-with>
                <subzones>
                    <include collection="literal.collection" />
                    <include collection="container.function" />
        	        <include collection="identifier.function" />
        	        <include collection="literal.keyword" />
        	        <include collection="keyword" />
        	        <include collection="identifier.class" />
        	        <include collection="identifier.variable" />
        	        <include collection="literal.string" />
        	        <include collection="delimiter" />
        	        <include collection="operator" />
                </subzones>
	        </zone>
	    </collection>
	    
		<collection name="keyword">
		    <zone name="keyword.control.flow">
                <expression>\b(break|c(ase|ontinue)|d(e(clare|fault)|ie|o)|e(lse(if)?|nd(declare|for(each)?|if|switch|while)|xit)|for(each)?|if|return|switch|use|while)\b</expression>
            </zone>
		    
			<zone name="keyword.constant.keyword">
				<expression>(?i)\b(|__(FILE|FUNCTION|CLASS|METHOD|LINE)__|ON|OFF|YES|NO|NL|BR|TAB)\b</expression>
			</zone>
			
			<zone name="keyword.constant.core">
				<expression>\b(DEFAULT_INCLUDE_PATH|E_(ALL|COMPILE_(ERROR|WARNING)|CORE_(ERROR|WARNING)|(RECOVERABLE_)?ERROR|NOTICE|PARSE|STRICT|USER_(ERROR|NOTICE|WARNING)|WARNING)|PEAR_(EXTENSION_DIR|INSTALL_DIR)|PHP_(BINDIR|CONFIG_FILE_PATH|DATADIR|E(OL|XTENSION_DIR)|L(IBDIR|OCALSTATEDIR)|O(S|UTPUT_HANDLER_CONT|UTPUT_HANDLER_END|UTPUT_HANDLER_START)|SYSCONFDIR|VERSION))\b</expression>
			</zone>
			
			<zone name="keyword.constant.std">
				<expression>\b(A(B(DAY_([1-7])|MON_([0-9]{1,2}))|LT_DIGITS|M_STR|SSERT_(ACTIVE|BAIL|CALLBACK|QUIET_EVAL|WARNING))|C(ASE_(LOWER|UPPER)|HAR_MAX|O(DESET|NNECTION_(ABORTED|NORMAL|TIMEOUT)|UNT_(NORMAL|RECURSIVE))|REDITS_(ALL|DOCS|FULLPAGE|GENERAL|GROUP|MODULES|QA|SAPI)|RNCYSTR|RYPT_(BLOWFISH|EXT_DES|MD5|SALT_LENGTH|STD_DES)|URRENCY_SYMBOL)|D(AY_([1-7])|ECIMAL_POINT|IRECTORY_SEPARATOR|_(FMT|T_FMT))|E(NT_(COMPAT|NOQUOTES|QUOTES)|RA(|_D_FMT|_D_T_FMT|_T_FMT|_YEAR)|XTR_(IF_EXISTS|OVERWRITE|PREFIX_(ALL|IF_EXISTS|INVALID|SAME)|SKIP))|FRAC_DIGITS|GROUPING|HTML_(ENTITIES|SPECIALCHARS)|IN(FO_(ALL|CONFIGURATION|CREDITS|ENVIRONMENT|GENERAL|LICENSE|MODULES|VARIABLES)|I_(ALL|PERDIR|SYSTEM|USER)|T_(CURR_SYMBOL|FRAC_DIGITS))|L(C_(ALL|COLLATE|CTYPE|MESSAGES|MONETARY|NUMERIC|TIME)|O(CK_(EX|NB|SH|UN)|G_(ALERT|AUTH(|PRIV)|CONS|CRIT|CRON|DAEMON|DEBUG|EMERG|ERR|INFO|KERN|LOCAL([0-7])|LPR|MAIL|NDELAY|NEWS|NOTICE|NOWAIT|ODELAY|PERROR|PID|SYSLOG|USER|UUCP|WARNING)))|M(ON_([0-9]{1,2}|DECIMAL_POINT|GROUPING|THOUSANDS_SEP)|YSQL_(ASSOC|BOTH|NUM)|_(1_PI|2_(PI|SQRTPI)|E|L(N10|N2|OG(10E|2E))|PI(|_2|_4)|SQRT1_2|SQRT2))|N(EGATIVE_SIGN|O(EXPR|STR)|_(CS_PRECEDES|SEP_BY_SPACE|SIGN_POSN))|P(ATH(INFO_(BASENAME|DIRNAME|EXTENSION|FILENAME)|_SEPARATOR)|M_STR|OSITIVE_SIGN|_(CS_PRECEDES|SEP_BY_SPACE|SIGN_POSN))|RADIXCHAR|S(EEK_(CUR|END|SET)|ORT_(ASC|DESC|NUMERIC|REGULAR|STRING)|TR_PAD_(BOTH|LEFT|RIGHT))|T(HOUS(ANDS_SEP|EP)|_(FMT(|_AMPM)))|YES(EXPR|STR))\b</expression>
			</zone>
            
            <zone name="keyword.constant.class">
                <expression>\bconst\b</expression>
            </zone>
            
            <zone name="keyword.control.include">
                <expression>(?i)\b((?:require|include)(?:_once)?)\b\s*</expression>
            </zone>
            
            <zone name="keyword.control.exception">
                <expression>\b(catch|try|throw|exception)\b</expression>
            </zone>
            
            <zone name="keyword.constant.class.other">
				<expression>([a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)(::)([a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)</expression>
				<capture number="1" name="class.name" />
				<capture number="2" name="operator.scope.resolution" />
				<capture number="3" name="keyword.constant.other" />
			</zone>
            
            <zone name="keyword.modifier.scope">
            	<expression>\b(static|public|protected|private|abstract)\b</expression>
            </zone>
            
			<zone name="keyword.constant.other">
				<expression>[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*</expression>
			</zone>
		</collection>
		
		
		<!-- Identifiers -->
		
		<collection name="identifier.variable">
		    <zone name="identifier.variable.object.property">
		        <expression>(->)([a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)</expression>
		        <capture number="1" name="operator.pointer" />
		    </zone>
		    <zone name="identifier.variable.class.static.property">
		        <expression>([a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)(::)(\$)([a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)</expression>
		        <capture number="1" name="class.name" />
				<capture number="2" name="operator.scope.resolution" />
		        <capture number="3" name="operator.dollar-sign.variable.begin" />
		        <capture number="4" name="property.name" />
		    </zone>
		    <zone name="identifier.variable.instance.class">
		        <expression>(\$)this\b</expression>
		        <capture number="1" name="operator.dollar-sign.variable.begin" />
		    </zone>
		    <zone name="identifier.variable.global">
		        <expression>(\$)(_(COOKIE|FILES|GET|POST|REQUEST))\b</expression>
		        <capture number="1" name="operator.dollar-sign.variable.begin" />
		    </zone>
		    <zone name="identifier.variable.local">
		        <expression>(\$)([a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)</expression>
		        <capture number="1" name="operator.dollar-sign.variable.begin" />
		    </zone>
		</collection>
		
		<collection name="identifier.constant">
			<zone name="identifier.class.constant">
				<expression>([a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)(::)([a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)</expression>
				<capture number="1" name="class.name" />
				<capture number="2" name="operator.scope.resolution" />
				<capture number="3" name="constant.name" />
			</zone>
		</collection>
		
		<collection name="identifier.function">
		    <include collection="identifier.function.support" />
		    
		    <zone name="identifier.function.object.method">
			    <starts-with>
			        <expression>(->)([A-Za-z_][A-Za-z_0-9]*)(\()</expression>
			        <capture number="1" name="delimiter.pointer" />
			        <capture number="2" name="name" />
			        <capture number="3" name="delimiter.balanced.parenthesis.begin" />
			    </starts-with>
				<ends-with>
				    <expression>\)</expression>
				    <capture number="0" name="delimiter.balanced.parenthesis.end" />
				</ends-with>
				<subzones>
				    <include collection="identifier.function.subzones" />
				</subzones>
			</zone>
			
			<zone name="identifier.function.class.method.static">
				<starts-with>
					<expression>([a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)(::)([a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)(\()</expression>
					<capture number="1" name="class.name" />
					<capture number="2" name="operator.scope.resolution" />
					<capture number="3" name="method.name" />
					<capture number="4" name="delimiter.balanced.parenthesis.begin" />
				</starts-with>
				<ends-with>
					<expression>\)</expression>
					<capture number="0" name="delimiter.balanced.parenthesis.end" />
				</ends-with>
				<subzones>
					<include collection="identifier.function.subzones" />
				</subzones>
			</zone>
			
			<zone name="identifier.function">
			    <starts-with>
			        <expression>[A-Za-z_][A-Za-z_0-9]*(\()</expression>
			        <capture number="1" name="delimiter.balanced.parenthesis.begin" />
			    </starts-with>
				<ends-with>
				    <expression>\)</expression>
				    <capture number="0" name="delimiter.balanced.parenthesis.end" />
				</ends-with>
				<subzones>
				    <include collection="identifier.function.subzones" />
				</subzones>
			</zone>
		</collection>
		
		<collection name="identifier.function.subzones">
            <include collection="language" />
        </collection>
		
		<collection name="identifier.variable.parameter">
		    <include zone="identifier.variable.local" />
		</collection>
		
		<collection name="identifier.class">
		    <!--<include collection="identifier.class.support" />-->
			<zone name="identifier.class">
				<expression>(?i)\b(new)\s+(?:(\$[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)|(\w+))|(\w+)(?=::)</expression>
				<capture number="1" name="keyword.constant.new"/>
				<capture number="2" name="identifier.variable"/>
				<capture number="3" name="identifier.class.name"/>
				<capture number="4" name="identifier.class.static-method"/>
			</zone>
		</collection>
        
        
        <!-- Containers -->
        <collection name="container.function">
            <zone name="container.function.magic.parenthesis-delimited">
                <starts-with>
                    <expression>((?:(?:final|abstract|public|private|protected|static)\s+)*)(function)(?:\s+|(\s*&amp;\s*))(?:(__(?:call|(?:con|de)struct|get|(?:is|un)?set|tostring|clone|set_state|sleep|wakeup|autoload))|(__[a-zA-Z0-9_]+))\s*(\()</expression>
                    <capture number="1" name="keyword.modifier.scope" />
                    <capture number="2" name="keyword.definition.function.begin" />
                    <capture number="4" name="name" />
                    <capture number="6" name="delimiter.balanced.parenthesis.parameters.function.begin" />
                </starts-with>
                <ends-with>
                    <expression>\)</expression>
                    <capture number="0" name="delimiter.balanced.parenthesis.parameters.function.end" />
                </ends-with>
                <subzones>
                    <zone name="identifier.variable.parameter">
        		        <expression>(?x)(\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*?\b</expression>
        		        <capture number="1" name="delimiter.variable.begin" />
        		    </zone>
        		    <include collection="metadata.comment" />
        	        <include collection="literal.collection" />
        	        <include collection="literal.keyword" />
        	        <include collection="identifier.function" />
        	        <include collection="keyword" />
        	        <include collection="identifier.class" />
        	        <include collection="identifier.variable" />
        	        <include collection="literal.string" />
        	        <include collection="literal.numeric" />
        		    <include collection="operator" />
        		    <include collection="delimiter" />
                </subzones>
            </zone>
            
            <zone name="container.function.parenthesis-delimited">
                <starts-with>
                    <expression>((?:(?:final|abstract|public|private|protected|static)\s+)*)(function)(?:\s+|(\s*&amp;\s*))(?:(__(?:call|(?:con|de)struct|get|(?:is|un)?set|tostring|clone|set_state|sleep|wakeup|autoload))|([a-zA-Z0-9_]+))\s*(\()</expression>
                    <capture number="1" name="keyword.modifier.scope" />
                    <capture number="2" name="keyword.definition.function.begin" />
                    <capture number="5" name="name" />
                    <capture number="6" name="delimiter.balanced.parenthesis.parameters.function.begin" />
                </starts-with>
                <ends-with>
                    <expression>\)</expression>
                    <capture number="0" name="delimiter.balanced.parenthesis.parameters.function.end" />
                </ends-with>
                <subzones>
                    <zone name="identifier.variable.parameter">
        		        <expression>(?x)(\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*?\b</expression>
        		        <capture number="1" name="delimiter.variable.begin" />
        		    </zone>
        		    <include collection="metadata.comment" />
        	        <include collection="literal.collection" />
        	        <include collection="literal.keyword" />
        	        <include collection="identifier.function" />
        	        <include collection="keyword" />
        	        <include collection="identifier.class" />
        	        <include collection="identifier.variable" />
        	        <include collection="literal.string" />
        	        <include collection="literal.numeric" />
        		    <include collection="operator" />
        		    <include collection="delimiter" />
                </subzones>
            </zone>
        </collection>
        
        <collection name="container.class">
            <zone name="container.class">
                    <expression>(?i)^\s*((abstract|final)?\s*(class)\s+([a-z0-9_]+))\s*((?i:(extends))\s+([a-zA-Z0-9_]+))?\s*((?i:(implements))\s+([a-zA-Z0-9_]+))?</expression>
                    <capture number="1" name="class.current" />
                    <capture number="2" name="keyword.modifier.scope" />
                    <capture number="3" name="keyword.definition.class.begin" />
                    <capture number="4" name="name" />
                    <capture number="5" name="class.extended" />
                    <capture number="6" name="keyword.definition.class.extended.begin" />
                    <capture number="7" name="name" />
                    <capture number="8" name="class.implemented" />
                    <capture number="9" name="keyword.definition.class.implemented.begin" />
                    <capture number="10" name="name" />
            </zone>
        </collection>
        
        <collection name="container.block">
            <zone name="container.block.if">
                <starts-with>
                    <expression>(\bif\b)\s*(\()</expression>
                    <capture number="1" name="keyword.control.flow.if" />
                    <capture number="2" name="delimiter.balanced.parenthesis.condition.begin" />
                </starts-with>
                <ends-with>
                    <expression>\)</expression>
                    <capture number="0" name="delimiter.balanced.parenthesis.condition.end" />
                </ends-with>
                <subzones>
                    <include collection="container.block.subzones" />
                </subzones>
            </zone>
            <zone name="container.block.elseif">
                <starts-with>
                    <expression>(\belse\s*if\b)\s*(\()</expression>
                    <capture number="1" name="keyword.control.flow.elseif" />
                    <capture number="2" name="delimiter.balanced.parenthesis.condition.begin" />
                </starts-with>
                <ends-with>
                    <expression>\)</expression>
                    <capture number="0" name="delimiter.balanced.parenthesis.condition.end" />
                </ends-with>
                <subzones>
                    <include collection="container.block.subzones" />
                </subzones>
            </zone>
            <zone name="container.block.else">
                <expression>(\belse\b)</expression>
                <capture number="1" name="keyword.control.flow.else" />
                <capture number="2" name="delimiter.balanced.parenthesis.condition.begin" />
            </zone>
            <zone name="container.block.foreach">
                <starts-with>
                    <expression>(\bfor\s*each\b)\s*(\()</expression>
                    <capture number="1" name="keyword.control.flow.foreach" />
                    <capture number="2" name="delimiter.balanced.parenthesis.condition.begin" />
                </starts-with>
                <ends-with>
                    <expression>\)</expression>
                    <capture number="0" name="delimiter.balanced.parenthesis.condition.end" />
                </ends-with>
                <subzones>
                    <zone name="operator.as">
                        <expression>as</expression>
                    </zone>
                    <include collection="container.block.subzones" />
                </subzones>
            </zone>
            <zone name="container.block.for">
                <starts-with>
                    <expression>(\bfor\b)\s*(\()</expression>
                    <capture number="1" name="keyword.control.flow.for" />
                    <capture number="2" name="delimiter.balanced.parenthesis.condition.begin" />
                </starts-with>
                <ends-with>
                    <expression>\)</expression>
                    <capture number="0" name="delimiter.balanced.parenthesis.condition.end" />
                </ends-with>
                <subzones>
                    <include collection="container.block.subzones" />
                </subzones>
            </zone>
            <zone name="container.block.while">
                <starts-with>
                    <expression>(\bwhile\b)\s*(\()</expression>
                    <capture number="1" name="keyword.control.flow.while" />
                    <capture number="2" name="delimiter.balanced.parenthesis.condition.begin" />
                </starts-with>
                <ends-with>
                    <expression>\)</expression>
                    <capture number="0" name="delimiter.balanced.parenthesis.condition.end" />
                </ends-with>
                <subzones>
                    <include collection="container.block.subzones" />
                </subzones>
            </zone>
            <zone name="container.block.dowhile">
                <starts-with>
                    <expression>(\bdo(\s)*while\b)\s*(\()</expression>
                    <capture number="1" name="keyword.control.flow.dowhile" />
                    <capture number="2" name="delimiter.balanced.parenthesis.condition.begin" />
                </starts-with>
                <ends-with>
                    <expression>\)</expression>
                    <capture number="0" name="delimiter.balanced.parenthesis.condition.end" />
                </ends-with>
                <subzones>
                    <include collection="container.block.subzones" />
                </subzones>
            </zone>
            <zone name="container.block.switch">
                <starts-with>
                    <expression>(\bswitch\b)\s*(\()</expression>
                    <capture number="1" name="keyword.control.flow.switch" />
                    <capture number="2" name="delimiter.balanced.parenthesis.condition.begin" />
                </starts-with>
                <ends-with>
                    <expression>\)</expression>
                    <capture number="0" name="delimiter.balanced.parenthesis.condition.end" />
                </ends-with>
                <subzones>
                    <include collection="container.block.subzones" />
                </subzones>
            </zone>
            <zone name="container.block.try">
                <expression>(\btry\b)</expression>
                <capture number="1" name="keyword.control.flow.try" />
            </zone>
            <zone name="container.block.catch">
                <starts-with>
                    <expression>(\bcatch\b)\s*(\()</expression>
                    <capture number="1" name="keyword.control.flow.catch" />
                    <capture number="2" name="delimiter.balanced.parenthesis.condition.begin" />
                </starts-with>
                <ends-with>
                    <expression>\)</expression>
                    <capture number="0" name="delimiter.balanced.parenthesis.condition.end" />
                </ends-with>
                <subzones>
                    <include collection="container.block.subzones" />
                </subzones>
            </zone>
        </collection>
        
        <collection name="container.block.subzones">
            <zone name="sub-expression">
                <starts-with>\(</starts-with>
                <ends-with>\)</ends-with>
                <subzones>
                    <include collection="language" />
                </subzones>
            </zone>
            <include collection="language" />
        </collection>
        
        <!-- Operators (grabbed from elliottcable's Ruby.sugar) -->
        
        <collection name="operator">
        	<zone name="operator.type.instanceof">
        		<expression>\b(instanceof)\s*([a-zA-Z_]*)</expression>
        		<capture number="1" name="operator.type.instanceof" />
        		<capture number="2" name="identifier.class.name" />
        	</zone>
            <zone name="operator.pointer">
                <expression>-></expression>
            </zone>
            <zone name="operator.dollar-sign.variable">
                <expression>\$</expression>
            </zone>            
            <zone name="operator.comparator">
                <expression>(!)?(===|==|&lt;|&lt;=|&gt;|&gt;=)</expression>
                <capture number="1" name="not" />
            </zone>
            <zone name="operator.accessor">
                <expression>=|&lt;&lt;|&gt;&gt;</expression>
            </zone>
            <zone name="operator.mathematical">
                <expression>\+|\-|\*|\\|%</expression>
            </zone>
            <zone name="operator.logical.and">
                <expression>\band\b|&amp;&amp;</expression>
            </zone>
            <zone name="operator.logical.or">
                <expression>\bor\b|\|\|</expression>
            </zone>
        </collection>
    
        
        <!-- Delimiters (grabbed from elliottcable's Ruby.sugar) -->
        
        <collection name="delimiter">
            <zone name="delimiter.terminator">
                <expression>\;</expression>
            </zone>
            <zone name="delimiter.separator.comma">
                <expression>,</expression>
            </zone>
            <zone name="delimiter.separator.pairing">
                <expression>=></expression>
            </zone>
            <zone name="delimiter.balanced.curly-brace.begin">
                <expression>\{</expression>
            </zone>
            <zone name="delimiter.balanced.curly-brace.end">
                <expression>\}</expression>
            </zone>
            <zone name="delimiter.balanced.parenthesis.begin">
                <expression>\(</expression>
            </zone>
            <zone name="delimiter.balanced.parenthesis.end">
                <expression>\)</expression>
            </zone>
            <zone name="delimiter.balanced.square-brace.begin">
                <expression>\[</expression>
            </zone>
            <zone name="delimiter.balanced.square-brace.end">
                <expression>\]</expression>
            </zone>
        </collection>
        
        <collection name="identifier.function.support">
            <!-- Array Functions -->
            <zone name="identifier.function.support.array">
                <starts-with>
                    <expression>(?i)\b(s(huffle|ort)|n(ext|at(sort|casesort))|c(o(unt|mpact)|urrent)|in_array|u(sort|ksort|asort)|prev|e(nd|xtract)|k(sort|ey|rsort)|a(sort|r(sort|ray_(s(hift|um|plice|earch|lice)|c(h(unk|ange_key_case)|o(unt_values|mbine))|intersect(_(u(key|assoc)|key|assoc))?|diff(_(u(key|assoc)|key|assoc))?|u(n(shift|ique)|intersect(_(uassoc|assoc))?|diff(_(uassoc|assoc))?)|p(op|ush|ad|roduct)|values|key(s|_exists)|f(il(ter|l(_keys)?)|lip)|walk(_recursive)?|r(e(duce|verse)|and)|m(ultisort|erge(_recursive)?|ap))))|r(sort|eset|ange)|m(in|ax))(\()</expression>
                    <capture number="1" name="name" />
                    <capture number="41" name="delimiter.balanced.parenthesis.begin" />
                </starts-with>
                <ends-with>
                    <expression>\)</expression>
				    <capture number="0" name="delimiter.balanced.parenthesis.end" />
                </ends-with>
                <subzones>
					<include collection="identifier.function.subzones" />
				</subzones>
            </zone>
            <!-- Assert Functions -->
            <zone name="identifier.function.support.assert">
            	<starts-with>
            		<expression>(?i)\b(assert(_options)?)(\()</expression>
            		<capture number="1" name="name" />
            		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
            	</starts-with>
            	<ends-with>
            		<capture number="0" name="delimiter.balanced.parenthesis.end" />
            	</ends-with>
            	<subzones>
					<include collection="identifier.function.subzones" />
				</subzones>
            </zone>
            <!-- Attr Functions -->
				<zone name="identifier.function.support.attr">
					<starts-with>
						<expression>(?i)\b(dom_attr_is_id)(\()</expression>
						<capture number="1" name="name" />
						<capture number="2" name="delimiter.balanced.parenthesis.begin" />
					</starts-with>
					<ends-with>
						<expression>\)</expression>
						<capture number="0" name="delimiter.balanced.parenthesis.end" />
					</ends-with>
					<subzones>
						<include collection="identifier.function.subzones" />
					</subzones>
				</zone>
				
				<!-- Basic Functions -->
				<zone name="identifier.function.support.basic_functions">
					<starts-with>
						<expression>(?i)\b(highlight_(string|file)|s(ys_getloadavg|et_(include_path|magic_quotes_runtime)|leep)|c(on(stant|nection_(status|aborted))|all_user_(func(_array)?|method(_array)?))|time_(sleep_until|nanosleep)|i(s_uploaded_file|n(i_(set|restore|get(_all)?)|et_(ntop|pton))|p2long|gnore_user_abort|mport_request_variables)|u(sleep|nregister_tick_function)|error_(log|get_last)|p(hp_strip_whitespace|utenv|arse_ini_file|rint_r)|flush|long2ip|re(store_include_path|gister_(shutdown_function|tick_function))|get(servby(name|port)|opt|_(c(urrent_user|fg_var)|include_path|magic_quotes_(gpc|runtime))|protobyn(umber|ame)|env)|move_uploaded_file)(\()</expression>
						<capture number="1" name="name" />
						<capture number="28" name="delimiter.balanced.parenthesis.begin" />
					</starts-with>
					<ends-with>
						<expression>\)</expression>
						<capture number="0" name="delimiter.balanced.parenthesis.end" />
					</ends-with>
					<subzones>
						<include collection="identifier.function.subzones" />
					</subzones>
				</zone>
				
				<!-- BCmath Functions -->
				<zone name="identifier.function.support.bcmath">
					<starts-with>
						<expression>(?i)\b(bc(s(cale|ub|qrt)|comp|div|pow(mod)?|add|m(od|ul)))(\()</expression>
						<capture number="1" name="name" />
						<capture number="6" name="delimiter.balanced.parenthesis.begin" />
					</starts-with>
					<ends-with>
						<expression>\)</expression>
						<capture number="0" name="delimiter.balanced.parenthesis.end" />
					</ends-with>
					<subzones>
						<include collection="identifier.function.subzones" />
					</subzones>
				</zone>
				
				<!-- Birdsetp Functions -->
				<zone name="identifier.function.support.birdstep">
					<starts-with>
						<expression>(?i)\b(birdstep_(c(o(nnect|mmit)|lose)|off_autocommit|exec|f(ieldn(um|ame)|etch|reeresult)|autocommit|r(ollback|esult)))(\()</expression>
						<capture number="1" name="name" />
						<capture number="8" name="delimiter.balanced.parenthesis.begin" />
					</starts-with>
					<ends-with>
						<expression>\)</expression>
						<capture number="0" name="delimiter.balanced.parenthesis.end" />
					</ends-with>
					<subzones>
						<include collection="identifier.function.subzones" />
					</subzones>
				</zone>
				
				<!-- Browscap Functions -->
                <zone name="identifier.function.support.browscap">
                	<starts-with>
                		<expression>(?i)\b(get_browser)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Builtin Functions -->
                <zone name="identifier.function.support.builtin_functions">
                	<starts-with>
                		<expression>(?i)\b((s(tr(nc(asecmp|mp)|c(asecmp|mp)|len)|et_e(rror_handler|xception_handler))|c(lass_exists|reate_function)|trigger_error|i(s_(subclass_of|a)|nterface_exists)|de(fine(d)?|bug_(print_backtrace|backtrace))|zend_version|property_exists|e(ach|rror_reporting|xtension_loaded)|func(tion_exists|_(num_args|get_arg(s)?))|leak|restore_e(rror_handler|xception_handler)|get_(class(_(vars|methods))?|included_files|de(clared_(classes|interfaces)|fined_(constants|vars|functions))|object_vars|extension_funcs|parent_class|loaded_extensions|resource_type)|method_exists))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="25" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- cal_unix Functions -->
                <zone name="identifier.function.support.cal_unix">
                	<starts-with>
                		<expression>(?i)\b((jdtounix|unixtojd))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="3" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Calendar Functions -->
                <zone name="identifier.function.support.calendar">
                	<starts-with>
                		<expression>(?i)\b((cal_(to_jd|info|days_in_month|from_jd)|j(d(to(j(ulian|ewish)|french|gregorian)|dayofweek|monthname)|uliantojd|ewishtojd)|frenchtojd|gregoriantojd))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="8" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Characterdata Functions -->
                <zone name="identifier.function.support.characterdata">
                	<starts-with>
                		<expression>(?i)\b(dom_characterdata_(substring_data|insert_data|delete_data|append_data|replace_data))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="3" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- com_com Functions -->
                <zone name="identifier.function.support.com_com">
                	<starts-with>
                		<expression>(?i)\b(com_(create_guid|print_typeinfo|event_sink|load_typelib|get_active_object|message_pump))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="3" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- com_variant Functions -->
                <zone name="identifier.function.support.com_variant">
                	<starts-with>
                		<expression>(?i)\b(variant_(s(ub|et(_type)?)|n(ot|eg)|c(a(st|t)|mp)|i(nt|div|mp)|or|d(iv|ate_(to_timestamp|from_timestamp))|pow|eqv|fix|a(nd|dd|bs)|get_type|round|xor|m(od|ul)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="13" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Crypt Functions -->
                <zone name="identifier.function.support.crypt">
                	<starts-with>
                		<expression>(?i)\b(crypt)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Ctype Functions -->
                <zone name="identifier.function.support.ctype">
                	<starts-with>
                		<expression>(?i)\b(ctype_(space|cntrl|digit|upper|p(unct|rint)|lower|al(num|pha)|graph|xdigit))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="5" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- cry_convert Functions -->
                <zone name="identifier.function.support.cyr_convert">
                	<starts-with>
                		<expression>(?i)\b(convert_cyr_string)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Datetime Functions -->
                <zone name="identifier.function.support.datetime">
                	<starts-with>
                		<expression>(?i)\b(strptime)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Dba Functions -->
                <zone name="identifier.function.support.dba">
                	<starts-with>
                		<expression>(?i)\b(dba_(handlers|sync|nextkey|close|insert|delete|op(timize|en)|exists|popen|key_split|f(irstkey|etch)|list|replace))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="5" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Dbase Functions -->
                <zone name="identifier.function.support.dbase">
                	<starts-with>
                		<expression>(?i)\b(dbase_(num(fields|records)|c(lose|reate)|delete_record|open|pack|add_record|get_(header_info|record(_with_names)?)|replace_record))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="7" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Dir Functions -->
                <zone name="identifier.function.support.dir">
                	<starts-with>
                		<expression>(?i)\b((scandir|c(h(dir|root)|losedir)|dir|opendir|re(addir|winddir)|g(etcwd|lob)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="7" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Dl Functions -->
                <zone name="identifier.function.support.dl">
                	<starts-with>
                		<expression>(?i)\b(dl)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Dns Functions -->
                <zone name="identifier.function.support.dns">
                	<starts-with>
                		<expression>(?i)\b((dns_(check_record|get_(record|mx))|gethostby(name(l)?|addr)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="7" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Document Functions -->
                <zone name="identifier.function.support.document">
                	<starts-with>
                		<expression>(?i)\b(dom_document_(s(chema_validate(_file)?|ave(_html(_file)?|xml)?)|normalize_document|create_(c(datasection|omment)|text_node|document_fragment|processing_instruction|e(ntity_reference|lement(_ns)?)|attribute(_ns)?)|import_node|validate|load(_html(_file)?|xml)?|adopt_node|re(name_node|laxNG_validate_(file|xml))|get_element(s_by_tag_name(_ns)?|_by_id)|xinclude))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="18" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Domconfiguration Functions -->
                <zone name="identifier.function.support.domconfiguration">
                	<starts-with>
                		<expression>(?i)\b(dom_domconfiguration_(set_parameter|can_set_parameter|get_parameter))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="3" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Domerrorhandler Functions -->
                <zone name="identifier.function.support.domerrorhandler">
                	<starts-with>
                		<expression>(?i)\b(dom_domerrorhandler_handle_error)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Domimplementation Functions -->
                <zone name="identifier.function.support.domimplementation">
                	<starts-with>
                		<expression>(?i)\b(dom_domimplementation_(has_feature|create_document(_type)?|get_feature))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="4" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Domimplmentationlist Functions -->
                <zone name="identifier.function.support.domimplementationlist">
                	<starts-with>
                		<expression>(?i)\b(dom_domimplementationlist_item)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Domimplementationsource Functions -->
                <zone name="identifier.function.support.domimplementationsource">
                	<starts-with>
                		<expression>(?i)\b(dom_domimplementationsource_get_domimplementation(s)?)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="3" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Domstinglist Functions -->
                <zone name="identifier.function.support.domstringlist">
                	<starts-with>
                		<expression>(?i)\b(dom_domstringlist_item)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Easter Functions -->
                <zone name="identifier.function.support.easter">
                	<starts-with>
                		<expression>(?i)\b(easter_da(ys|te))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="3" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Element Functions -->
                <zone name="identifier.function.support.element">
                	<starts-with>
                		<expression>(?i)\b(dom_element_(has_attribute(_ns)?|set_(id_attribute(_n(s|ode))?|attribute(_n(s|ode(_ns)?))?)|remove_attribute(_n(s|ode))?|get_(elements_by_tag_name(_ns)?|attribute(_n(s|ode(_ns)?))?)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="17" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Exec Functions -->
                <zone name="identifier.function.support.exec">
                	<starts-with>
                		<expression>(?i)\b((s(hell_exec|ystem)|p(assthru|roc_nice)|e(scapeshell(cmd|arg)|xec)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="7" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Exif Functions -->
                <zone name="identifier.function.support.exif">
                	<starts-with>
                		<expression>(?i)\b(exif_(imagetype|t(humbnail|agname)|read_data))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="4" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Fdf Functions -->
                <zone name="identifier.function.support.fdf">
                	<starts-with>
                		<expression>(?i)\b(fdf_(header|s(et_(s(tatus|ubmit_form_action)|target_frame|o(n_import_javascript|pt)|javascript_action|encoding|v(ersion|alue)|f(ile|lags)|ap)|ave(_string)?)|next_field_name|c(lose|reate)|open(_string)?|e(num_values|rr(no|or))|add_(template|doc_javascript)|remove_item|get_(status|opt|encoding|v(ersion|alue)|f(ile|lags)|a(ttachment|p))))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="19" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- File Functions -->
                <zone name="identifier.function.support.file">
                	<starts-with>
                		<expression>(?i)\b((sys_get_temp_dir|copy|t(empnam|mpfile)|u(nlink|mask)|p(close|open)|f(s(canf|tat|eek)|nmatch|close|t(ell|runcate)|ile(_(put_contents|get_contents))?|open|p(utcsv|assthru)|eof|flush|write|lock|read|get(s(s)?|c(sv)?))|r(e(name|a(dfile|lpath)|wind)|mdir)|get_meta_tags|mkdir))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="18" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Filestat Functions -->
                <zone name="identifier.function.support.filestat">
                	<starts-with>
                		<expression>(?i)\b((stat|c(h(own|grp|mod)|learstatcache)|is_(dir|executable|file|link|writable|readable)|touch|disk_(total_space|free_space)|file(size|ctime|type|inode|owner|_exists|perms|atime|group|mtime)|l(stat|chgrp)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="9" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Filter Functions -->
                <zone name="identifier.function.support.filter">
                	<starts-with>
                		<expression>(?i)\b(filter_(has_var|input(_array)?|var(_array)?))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="5" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Formatted_print Functions -->
                <zone name="identifier.function.support.formatted_print">
                	<starts-with>
                		<expression>(?i)\b((sprintf|printf|v(sprintf|printf|fprintf)|fprintf))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="4" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Fsock Functions -->
                <zone name="identifier.function.support.fsock">
                	<starts-with>
                		<expression>(?i)\b((pfsockopen|fsockopen))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="3" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Ftok In PHP Functions -->
                <zone name="identifier.function.support.ftok">
                	<starts-with>
                		<expression>(?i)\b(ftok)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Gd Functions -->
                <zone name="identifier.function.support.gd">
                	<starts-with>
                		<expression>(?i)\b((image(s(y|tring(up)?|et(style|t(hickness|ile)|pixel|brush)|avealpha|x)|c(har(up)?|o(nvolution|py(res(ized|ampled)|merge(gray)?)?|lor(s(total|et|forindex)|closest(hwb|alpha)?|transparent|deallocate|exact(alpha)?|a(t|llocate(alpha)?)|resolve(alpha)?|match))|reate(truecolor|from(string|jpeg|png|wbmp|g(if|d(2(part)?)?)|x(pm|bm)))?)|2wbmp|t(ypes|tf(text|bbox)|ruecolortopalette)|i(struecolor|nterlace)|d(estroy|ashedline)|jpeg|ellipse|p(s(slantfont|copyfont|text|e(ncodefont|xtendfont)|freefont|loadfont|bbox)|ng|olygon|alettecopy)|f(t(text|bbox)|il(ter|l(toborder|ed(polygon|ellipse|arc|rectangle))?)|ont(height|width))|wbmp|a(ntialias|lphablending|rc)|l(ine|oadfont|ayereffect)|r(otate|ectangle)|g(if|d(2)?|ammacorrect|rab(screen|window))|xbm)|jpeg2wbmp|png2wbmp|gd_info))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="46" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Gettext Functions -->
                <zone name="identifier.function.support.gettext">
                	<starts-with>
                		<expression>(?i)\b((ngettext|textdomain|d(ngettext|c(ngettext|gettext)|gettext)|gettext|bind(textdomain|_textdomain_codeset)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="6" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Gmp Functions -->
                <zone name="identifier.function.support.gmp">
                	<starts-with>
                		<expression>(?i)\b(gmp_(hamdist|s(can(1|0)|ign|trval|ub|etbit|qrt(rem)?)|c(om|lrbit|mp)|ne(g|xtprime)|in(tval|it|vert)|or|div(_(q(r)?|r)|exact)|jacobi|p(o(pcount|w(m)?)|erfect_square|rob_prime)|fact|legendre|a(nd|dd|bs)|random|gcd(ext)?|xor|m(od|ul)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="18" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Hash Functions -->
                <zone name="identifier.function.support.hash">
                	<starts-with>
                		<expression>(?i)\b(hash(_(hmac(_file)?|init|update(_(stream|file))?|fi(nal|le)|algos))?)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="8" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Head Functions -->
                <zone name="identifier.function.support.head">
                	<starts-with>
                		<expression>(?i)\b((set(cookie|rawcookie)|header(s_(sent|list))?))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="6" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Html Functions -->
                <zone name="identifier.function.support.html">
                	<starts-with>
                		<expression>(?i)\b((html(specialchars(_decode)?|_entity_decode|entities)|get_html_translation_table))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="5" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Http Functions -->
                <zone name="identifier.function.support.http">
                	<starts-with>
                		<expression>(?i)\b(http_build_query)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Ibase_blobsFunctions -->
                <zone name="identifier.function.support.ibase_blobs">
                	<starts-with>
                		<expression>(?i)\b(ibase_blob_(c(ancel|lose|reate)|i(nfo|mport)|open|echo|add|get))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="5" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Ibase_events Functions -->
                <zone name="identifier.function.support.ibase_events">
                	<starts-with>
                		<expression>(?i)\b(ibase_(set_event_handler|free_event_handler|wait_event))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="3" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Ibase_query Functions -->
                <zone name="identifier.function.support.ibase_query">
                	<starts-with>
                		<expression>(?i)\b(ibase_(n(um_(params|fields|rows)|ame_result)|execute|p(aram_info|repare)|f(ield_info|etch_(object|assoc|row)|ree_(query|result))|query|affected_rows))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="9" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Ibase_service Functions -->
                <zone name="identifier.function.support.ibase_service">
                	<starts-with>
                		<expression>(?i)\b(ibase_(serv(ice_(detach|attach)|er_info)|d(elete_user|b_info)|add_user|restore|backup|m(odify_user|aintain_db)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="7" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Iconv Functions -->
                <zone name="identifier.function.support.iconv">
                	<starts-with>
                		<expression>(?i)\b((iconv(_(s(tr(pos|len|rpos)|ubstr|et_encoding)|get_encoding|mime_(decode(_headers)?|encode)))?|ob_iconv_handler))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="9" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Image Functions -->
                <zone name="identifier.function.support.image">
                	<starts-with>
                		<expression>(?i)\b((image_type_to_(extension|mime_type)|getimagesize))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="4" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Info Functions -->
                <zone name="identifier.function.support.info">
                	<starts-with>
                		<expression>(?i)\b((zend_logo_guid|php(credits|info|_(sapi_name|ini_scanned_files|uname|egg_logo_guid|logo_guid|real_logo_guid)|version)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="5" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Interbase Functions -->
                <zone name="identifier.function.support.interbase">
                	<starts-with>
                		<expression>(?i)\b(ibase_(c(o(nnect|mmit(_ret)?)|lose)|trans|drop_db|pconnect|err(code|msg)|gen_id|rollback(_ret)?))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="8" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Interface Functions -->
                <zone name="identifier.function.support.interface">
                	<starts-with>
                		<expression>(?i)\b(curl_(setopt(_array)?|c(opy_handle|lose)|init|e(rr(no|or)|xec)|version|getinfo))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="7" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Iptc Functions -->
                <zone name="identifier.function.support.iptc">
                	<starts-with>
                		<expression>(?i)\b(iptc(parse|embed))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="3" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Json Functions -->
                <zone name="identifier.function.support.json">
                	<starts-with>
                		<expression>(?i)\b(json_(decode|encode))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="3" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Lcg Functions -->
                <zone name="identifier.function.support.lcg">
                	<starts-with>
                		<expression>(?i)\b(lcg_value)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Ldap Functions -->
                <zone name="identifier.function.support.ldap">
                	<starts-with>
                		<expression>(?i)\b(ldap_(s(tart_tls|ort|e(t_(option|rebind_proc)|arch)|asl_bind)|next_(entry|attribute|reference)|co(nnect|unt_entries|mpare)|t61_to_8859|8859_to_t61|d(n2ufn|elete)|unbind|parse_re(sult|ference)|e(rr(no|2str|or)|xplode_dn)|f(irst_(entry|attribute|reference)|ree_result)|add|list|get_(option|dn|entries|values_len|attributes)|re(name|ad)|mod_(del|add|replace)|bind))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="17" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Levenshtein Functions -->
                <zone name="identifier.function.support.levenshtein">
                	<starts-with>
                		<expression>(?i)\b(levenshtein)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Libxml Functions -->
                <zone name="identifier.function.support.libxml">
                	<starts-with>
                		<expression>(?i)\b(libxml_(set_streams_context|clear_errors|use_internal_errors|get_(errors|last_error)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="4" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Link Functions -->
                <zone name="identifier.function.support.link">
                	<starts-with>
                		<expression>(?i)\b((symlink|link(info)?|readlink))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="4" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Mail Functions -->
                <zone name="identifier.function.support.mail">
                	<starts-with>
                		<expression>(?i)\b((ezmlm_hash|mail))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="3" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Main Functions -->
                <zone name="identifier.function.support.main">
                	<starts-with>
                		<expression>(?i)\b(set_time_limit)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Math Functions -->
                <zone name="identifier.function.support.math">
                	<starts-with>
                		<expression>(?i)\b((h(ypot|exdec)|s(in(h)?|qrt)|number_format|c(os(h)?|eil)|is_(nan|infinite|finite)|tan(h)?|octdec|de(c(hex|oct|bin)|g2rad)|exp(m1)?|p(i|ow)|f(loor|mod)|log(1(p|0))?|a(sin(h)?|cos(h)?|tan(h|2)?|bs)|r(ound|ad2deg)|b(indec|ase_convert)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="23" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Mbstring Functions -->
                <zone name="identifier.function.support.mbstring">
                	<starts-with>
                		<expression>(?i)\b(mb_(s(tr(str|cut|to(upper|lower)|i(str|pos|mwidth)|pos|width|len|r(chr|i(chr|pos)|pos))|ubst(itute_character|r(_count)?)|end_mail)|http_(input|output)|c(heck_encoding|onvert_(case|encoding|variables|kana))|internal_encoding|output_handler|de(code_(numericentity|mimeheader)|tect_(order|encoding))|encode_(numericentity|mimeheader)|p(arse_str|referred_mime_name)|l(ist_(encodings(_alias_names)?|mime_names)|anguage)|get_info))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="22" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Mcrypt Functions -->
                <zone name="identifier.function.support.mcrypt">
                	<starts-with>
                		<expression>(?i)\b(m(crypt_(c(fb|reate_iv|bc)|ofb|decrypt|e(cb|nc(_(self_test|is_block_(algorithm(_mode)?|mode)|get_(supported_key_sizes|iv_size|key_size|algorithms_name|modes_name|block_size))|rypt))|list_(algorithms|modes)|ge(neric(_(init|deinit))?|t_(cipher_name|iv_size|key_size|block_size))|module_(self_test|close|is_block_(algorithm(_mode)?|mode)|open|get_(supported_key_sizes|algo_(key_size|block_size))))|decrypt_generic))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="21" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Metaphone Functions -->
                <zone name="identifier.function.support.metaphone">
                	<starts-with>
                		<expression>(?i)\b(metaphone)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Mhash Functions -->
                <zone name="identifier.function.support.mhash">
                	<starts-with>
                		<expression>(?i)\b(mhash(_(count|keygen_s2k|get_(hash_name|block_size)))?)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="5" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Microtime Functions -->
                <zone name="identifier.function.support.microtime">
                	<starts-with>
                		<expression>(?i)\b((get(timeofday|rusage)|microtime))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="4" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Mime_magic Functions -->
                <zone name="identifier.function.support.mime_magic">
                	<starts-with>
                		<expression>(?i)\b(mime_content_type)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Ming Functions -->
                <zone name="identifier.function.support.ming">
                	<starts-with>
                		<expression>(?i)\b((swf(prebuiltclip_init|videostream_init)|ming_(set(scale|cubicthreshold)|use(swfversion|constants)|keypress)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="7" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Multi Functions -->
                <zone name="identifier.function.support.multi">
                	<starts-with>
                		<expression>(?i)\b(curl_multi_(select|close|in(it|fo_read)|exec|add_handle|getcontent|remove_handle))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="4" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Mysqli_api Functions -->
                <zone name="identifier.function.support.mysqli_api">
                	<starts-with>
                		<expression>(?i)\b(mysqli_(s(sl_set|t(ore_result|at|mt_(s(tore_result|end_long_data|qlstate)|num_rows|close|in(sert_id|it)|data_seek|p(aram_count|repare)|e(rr(no|or)|xecute)|f(ield_count|etch|ree_result)|a(ttr_(set|get)|ffected_rows)|res(ult_metadata|et)|bind_(param|result)))|e(t_local_infile_(handler|default)|lect_db)|qlstate)|n(um_(fields|rows)|ext_result)|c(ha(nge_user|racter_set_name)|ommit|lose)|thread_(safe|id)|in(sert_id|it|fo)|options|d(ump_debug_info|ebug|ata_seek)|use_result|p(ing|repare)|err(no|or)|kill|f(ield_(seek|count|tell)|etch_(field(s|_direct)?|lengths|row)|ree_result)|warning_count|a(utocommit|ffected_rows)|r(ollback|eal_(connect|escape_string|query))|get_(server_(info|version)|host_info|client_(info|version)|proto_info)|more_results))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="37" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Mysqli_embedded Functions -->
                <zone name="identifier.function.support.mysqli_embedded">
                	<starts-with>
                		<expression>(?i)\b(mysqli_embedded_server_(start|end))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="3" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Mysqli_nonapi Functions -->
                <zone name="identifier.function.support.mysqli_nonapi">
                	<starts-with>
                		<expression>(?i)\b(mysqli_(s(tmt_get_warnings|et_charset)|connect(_err(no|or))?|query|fetch_(object|a(ssoc|rray))|get_(charset|warnings)|multi_query))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="9" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Mysqli_repl Functions -->
                <zone name="identifier.function.support.mysqli_repl">
                	<starts-with>
                		<expression>(?i)\b(mysqli_(s(end_query|lave_query)|disable_r(pl_parse|eads_from_master)|enable_r(pl_parse|eads_from_master)|rpl_(p(arse_enabled|robe)|query_type)|master_query))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="8" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Mysqli_report Functions -->
                <zone name="identifier.function.support.mysqli_report">
                	<starts-with>
                		<expression>(?i)\b(mysqli_report)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Namednodemap Functions -->
                <zone name="identifier.function.support.namednodemap">
                	<starts-with>
                		<expression>(?i)\b(dom_namednodemap_(set_named_item(_ns)?|item|remove_named_item(_ns)?|get_named_item(_ns)?))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="6" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Namelist Functions -->
                <zone name="identifier.function.support.namelist">
                	<starts-with>
                		<expression>(?i)\b(dom_namelist_get_name(space_uri)?)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="3" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Ncurses_functions Functions -->
                <zone name="identifier.function.support.ncurses_functions">
                	<starts-with>
                		<expression>(?i)\b(ncurses_(s(how_panel|cr(_(set|init|dump|restore)|l)|ta(nd(out|end)|rt_color)|lk_(set|noutrefresh|c(olor|lear)|init|touch|attr(set|o(n|ff))?|re(store|fresh))|avetty)|h(ide_panel|line|a(s_(colors|i(c|l)|key)|lfdelay))|n(o(nl|cbreak|echo|qiflush|raw)|ew(_panel|pad|win)|apms|l)|c(olor_(set|content)|urs_set|l(ear|rto(eol|bot))|an_change_color|break)|t(ypeahead|imeout|op_panel|erm(name|attrs))|i(sendwin|n(s(str|ch|tr|delln|ertln)|ch|it(_(color|pair))?))|d(oupdate|e(f(ine_key|_(shell_mode|prog_mode))|l(ch|_panel|eteln|ay_output|win)))|u(se_(default_colors|e(nv|xtended_names))|nget(ch|mouse)|pdate_panels)|p(noutrefresh|utp|a(nel_(window|above|below)|ir_content)|refresh)|e(cho(char)?|nd|rase(char)?)|v(idattr|line)|k(illchar|ey(ok|pad))|qiflush|f(ilter|l(ushinp|ash))|longname|w(stand(out|end)|hline|noutrefresh|c(olor_set|lear)|erase|vline|a(ttr(set|o(n|ff))|dd(str|ch))|getch|refresh|mo(use_trafo|ve)|border)|a(ssume_default_colors|ttr(set|o(n|ff))|dd(str|nstr|ch(str|nstr)?))|r(e(set(ty|_(shell_mode|prog_mode))|place_panel|fresh)|aw)|get(yx|ch|m(ouse|axyx))|b(o(ttom_panel|rder)|eep|kgd(set)?|audrate)|m(o(use(interval|_trafo|mask)|ve(_panel)?)|eta|v(hline|cur|inch|delch|vline|waddstr|add(str|nstr|ch(str|nstr)?)|getch))))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="80" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Node Functions -->
                <zone name="identifier.function.support.node">
                	<starts-with>
                		<expression>(?i)\b(dom_node_(set_user_data|has_(child_nodes|attributes)|normalize|c(ompare_document_position|lone_node)|i(s_(s(upported|ame_node)|default_namespace|equal_node)|nsert_before)|lookup_(namespace_uri|prefix)|append_child|get_(user_data|feature)|re(place_child|move_child)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="11" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Nodelist Functions -->
                <zone name="identifier.function.support.nodelist">
                	<starts-with>
                		<expression>(?i)\b(dom_nodelist_item)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Nsapi Functions -->
                <zone name="identifier.function.support.nsapi">
                	<starts-with>
                		<expression>(?i)\b(nsapi_(virtual|re(sponse_headers|quest_headers)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="4" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Openssl Functions -->
                <zone name="identifier.function.support.openssl">
                	<starts-with>
                		<expression>(?i)\b(openssl_(s(ign|eal)|csr_(sign|new|export(_to_file)?|get_(subject|public_key))|open|error_string|p(ublic_(decrypt|encrypt)|k(cs(12_(export(_to_file)?|read)|7_(sign|decrypt|encrypt|verify))|ey_(new|export(_to_file)?|free|get_(details|p(ublic|rivate))))|rivate_(decrypt|encrypt))|verify|x509_(check(_private_key|purpose)|parse|export(_to_file)?|free|read)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="22" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Output Functions -->
                <zone name="identifier.function.support.output">
                	<starts-with>
                		<expression>(?i)\b(o(utput_(add_rewrite_var|reset_rewrite_vars)|b_(start|clean|implicit_flush|end_(clean|flush)|flush|list_handlers|get_(status|c(ontents|lean)|flush|le(ngth|vel)))))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="9" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Pack Functions -->
                <zone name="identifier.function.support.pack">
                	<starts-with>
                		<expression>(?i)\b((unpack|pack))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="3" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Pageinfo Functions -->
                <zone name="identifier.function.support.pageinfo">
                	<starts-with>
                		<expression>(?i)\b(get(lastmod|my(inode|uid|pid|gid)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="4" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Pcntl Functions -->
                <zone name="identifier.function.support.pcntl">
                	<starts-with>
                		<expression>(?i)\b(pcntl_(s(ignal|etpriority)|exec|fork|w(stopsig|termsig|if(s(ignaled|topped)|exited)|exitstatus|ait(pid)?)|alarm|getpriority))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="8" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Pdo Functions -->
                <zone name="identifier.function.support.pdo">
                	<starts-with>
                		<expression>(?i)\b(pdo_drivers)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Pdf_dbh Functions -->
                <zone name="identifier.function.support.pdo_dbh">
                	<starts-with>
                		<expression>(?i)\b(pdo_drivers)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Pgsql Functions -->
                <zone name="identifier.function.support.pgsql">
                	<starts-with>
                		<expression>(?i)\b(pg_(se(nd_(execute|prepare|query(_params)?)|t_(client_encoding|error_verbosity)|lect)|host|num_(fields|rows)|c(o(n(nect(ion_(status|reset|busy))?|vert)|py_(to|from))|ancel_query|l(ient_encoding|ose))|insert|t(ty|ra(nsaction_status|ce))|options|d(elete|bname)|u(n(trace|escape_bytea)|pdate)|e(scape_(string|bytea)|nd_copy|xecute)|p(connect|ing|ort|ut_line|arameter_status|repare)|version|f(ield_(size|n(um|ame)|is_null|t(ype(_oid)?|able)|prtlen)|etch_(object|a(ssoc|ll(_columns)?|rray)|r(ow|esult))|ree_result)|query(_params)?|affected_rows|l(o_(seek|c(lose|reate)|tell|import|open|unlink|export|write|read(_all)?)|ast_(notice|oid|error))|get_(notify|pid|result)|result_(s(tatus|eek)|error(_field)?)|meta_data))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="42" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Php_apache Functions -->
                <zone name="identifier.function.support_apache">
                	<starts-with>
                		<expression>(?i)\b((virtual|apache_(setenv|note|child_terminate|lookup_uri|get_(version|modules)|re(s(et_timeout|ponse_headers)|quest_(s(ome_auth_required|ub_req_(lookup_(uri|file)|method_uri)|e(t_(etag|last_modified)|rver_port)|atisfies)|headers(_(in|out))?|is_initial_req|discard_request_body|update_mtime|err_headers_out|log_error|auth_(name|type)|r(un|emote_host)|meets_conditions)))|getallheaders))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="17" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Php_date Functions -->
                <zone name="identifier.function.support_date">
                	<starts-with>
                		<expression>(?i)\b((str(totime|ftime)|checkdate|time(zone_(name_(from_abbr|get)|identifiers_list|transitions_get|o(pen|ffset_get)|abbreviations_list))?|idate|date(_(sun(set|_info|rise)|create|isodate_set|time(zone_(set|get)|_set)|d(efault_timezone_(set|get)|ate_set)|offset_get|parse|format|modify))?|localtime|g(etdate|m(strftime|date|mktime))|mktime))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="17" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Php_dom Functions -->
                <zone name="identifier.function.support_dom">
                	<starts-with>
                		<expression>(?i)\b(dom_import_simplexml)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Php_fbsql Functions -->
                <zone name="identifier.function.support_fbsql">
                	<starts-with>
                		<expression>(?i)\b(fbsql_(hostname|s(t(op_db|art_db)|e(t_(characterset|transaction|password|lob_mode)|lect_db))|n(um_(fields|rows)|ext_result)|c(hange_user|o(nnect|mmit)|lo(se|b_size)|reate_(clob|db|blob))|table_name|insert_id|d(ata(_seek|base(_password)?)|rop_db|b_(status|query))|username|err(no|or)|p(connect|assword)|f(ield_(seek|name|t(ype|able)|flags|len)|etch_(object|field|lengths|a(ssoc|rray)|row)|ree_result)|query|warnings|list_(tables|dbs|fields)|a(utocommit|ffected_rows)|get_autostart_info|r(o(ws_fetched|llback)|e(sult|ad_(clob|blob)))|blob_size))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="30" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Php_ftp Functions -->
                <zone name="identifier.function.support_ftp">
                	<starts-with>
                		<expression>(?i)\b(ftp_(s(sl_connect|ystype|i(te|ze)|et_option)|n(list|b_(continue|put|f(put|get)|get))|c(h(dir|mod)|dup|onnect|lose)|delete|exec|p(ut|asv|wd)|f(put|get)|alloc|login|get(_option)?|r(ename|aw(list)?|mdir)|m(dtm|kdir)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="16" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Php_functions Functions -->
                <zone name="identifier.function.support_functions">
                	<starts-with>
                		<expression>(?i)\b((virtual|apache_(setenv|note|get(_(version|modules)|env)|response_headers)|getallheaders))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="6" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Php_imap Functions -->
                <zone name="identifier.function.support_imap">
                	<starts-with>
                		<expression>(?i)\b(imap_(header(s|info)|s(can|tatus|ort|ubscribe|e(t(_quota|flag_full|acl)|arch)|avebody)|c(heck|l(ose|earflag_full)|reatemailbox)|num_(recent|msg)|t(hread|imeout)|8bit|delete(mailbox)?|open|u(n(subscribe|delete)|id|tf(7_(decode|encode)|8))|e(rrors|xpunge)|ping|qprint|fetch(header|structure|_overview|body)|l(sub|ist|ast_error)|a(ppend|lerts)|get(subscribed|_quota(root)?|acl|mailboxes)|r(e(namemailbox|open)|fc822_(parse_(headers|adrlist)|write_address))|m(sgno|ime_header_decode|ail(_(co(py|mpose)|move)|boxmsginfo)?)|b(inary|ody(struct)?|ase64)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="32" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Php_mbregex Functions -->
                <zone name="identifier.function.support_mbregex">
                	<starts-with>
                		<expression>(?i)\b(mb_(split|ereg(i(_replace)?|_(search(_(setpos|init|pos|get(pos|regs)|regs))?|replace|match))?|regex_(set_options|encoding)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="10" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Php_milter Functions -->
                <zone name="identifier.function.support_milter">
                	<starts-with>
                		<expression>(?i)\b(smfi_(set(timeout|flags|reply)|chgheader|delrcpt|add(header|rcpt)|replacebody|getsymval))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="5" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Php_msql Functions -->
                <zone name="identifier.function.support_msql">
                	<starts-with>
                		<expression>(?i)\b(msql_(select_db|num_(fields|rows)|c(onnect|lose|reate_db)|d(ata_seek|rop_db|b_query)|error|pconnect|f(ield_(seek|name|t(ype|able)|flags|len)|etch_(object|field|array|row)|ree_result)|query|affected_rows|list_(tables|dbs|fields)|result))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="11" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Php_mssql Functions -->
                <zone name="identifier.function.support_mssql">
                	<starts-with>
                		<expression>(?i)\b(mssql_(select_db|n(um_(fields|rows)|ext_result)|c(onnect|lose)|init|data_seek|execute|pconnect|query|f(ield_(seek|name|type|length)|etch_(object|field|a(ssoc|rray)|row|batch)|ree_(statement|result))|g(uid_string|et_last_message)|r(ows_affected|esult)|bind|min_(error_severity|message_severity)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="14" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Php_mysql Functions -->
                <zone name="identifier.function.support_mysql">
                	<starts-with>
                		<expression>(?i)\b(mysql_(s(tat|e(t_charset|lect_db))|num_(fields|rows)|c(onnect|l(ient_encoding|ose)|reate_db)|thread_id|in(sert_id|fo)|d(ata_seek|rop_db|b_query)|unbuffered_query|e(scape_string|rr(no|or))|p(connect|ing)|f(ield_(seek|name|t(ype|able)|flags|len)|etch_(object|field|lengths|a(ssoc|rray)|row)|ree_result)|query|affected_rows|list_(tables|dbs|processes|fields)|re(sult|al_escape_string)|get_(server_info|host_info|client_info|proto_info)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="21" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Php_odbc Functions -->
                <zone name="identifier.function.support_odbc">
                	<starts-with>
                		<expression>(?i)\b((solid_fetch_prev|odbc_(s(tatistics|pecialcolumns|etoption)|n(um_(fields|rows)|ext_result)|c(o(nnect|lumn(s|privileges)|mmit)|ursor|lose(_all)?)|table(s|privileges)|data_source|e(rror(msg)?|xec(ute)?)|p(connect|r(imarykeys|ocedure(s|columns)|epare))|f(ield_(scale|n(um|ame)|type|len)|oreignkeys|etch_(into|object|array|row)|ree_result)|autocommit|longreadlen|gettypeinfo|r(ollback|esult(_all)?)|binmode)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="24" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Php_pcre Functions -->
                <zone name="identifier.function.support_pcre">
                	<starts-with>
                		<expression>(?i)\b(preg_(split|quote|last_error|grep|replace(_callback)?|match(_all)?))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="5" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Php_spl Functions -->
                <zone name="identifier.function.support_spl">
                	<starts-with>
                		<expression>(?i)\b((spl_(classes|object_hash|autoload(_(call|unregister|extensions|functions|register))?)|class_(implements|parents)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="7" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Php_sybase Functions -->
                <zone name="identifier.function.support_sybase_ct">
                	<starts-with>
                		<expression>(?i)\b(sybase_(se(t_message_handler|lect_db)|num_(fields|rows)|c(onnect|lose)|d(eadlock_retry_count|ata_seek)|unbuffered_query|pconnect|f(ield_seek|etch_(object|field|a(ssoc|rray)|row)|ree_result)|query|affected_rows|result|get_last_message|min_(server_severity|client_severity)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="11" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Php_sybase_db Functions -->
                <zone name="identifier.function.support_sybase_db">
                	<starts-with>
                		<expression>(?i)\b(sybase_(select_db|num_(fields|rows)|c(onnect|lose)|data_seek|pconnect|f(ield_seek|etch_(object|field|array|row)|ree_result)|query|affected_rows|result|get_last_message|min_(error_severity|message_severity)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="8" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Php_xmlwriter Functions -->
                <zone name="identifier.function.support_xmlwriter">
                	<starts-with>
                		<expression>(?i)\b(xmlwriter_(s(tart_(c(omment|data)|d(td(_(e(ntity|lement)|attlist))?|ocument)|pi|element(_ns)?|attribute(_ns)?)|et_indent(_string)?)|text|o(utput_memory|pen_(uri|memory))|end_(c(omment|data)|d(td(_(e(ntity|lement)|attlist))?|ocument)|pi|element|attribute)|f(ull_end_element|lush)|write_(c(omment|data)|dtd(_(e(ntity|lement)|attlist))?|pi|element(_ns)?|attribute(_ns)?|raw)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="29" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Php_zip Functions -->
                <zone name="identifier.function.support_zip">
                	<starts-with>
                		<expression>(?i)\b((s(tat(Name|Index)|et(Comment(Name|Index)|ArchiveComment))|c(lose|reateEmptyDir)|delete(Name|Index)|open|zip_(close|open|entry_(name|c(ompress(ionmethod|edsize)|lose)|open|filesize|read)|read)|unchange(Name|Index|All)|locateName|addF(ile|romString)|rename(Name|Index)|get(Stream|Comment(Name|Index)|NameIndex|From(Name|Index)|ArchiveComment)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="19" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Posix Functions -->
                <zone name="identifier.function.support.posix">
                	<starts-with>
                		<expression>(?i)\b(posix_(s(trerror|et(sid|uid|pgid|e(uid|gid)|gid))|ctermid|i(satty|nitgroups)|t(tyname|imes)|uname|kill|access|get(sid|cwd|_last_error|uid|e(uid|gid)|p(id|pid|w(nam|uid)|g(id|rp))|login|rlimit|g(id|r(nam|oups|gid)))|mk(nod|fifo)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="16" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Proc_open Functions -->
                <zone name="identifier.function.support.proc_open">
                	<starts-with>
                		<expression>(?i)\b(proc_(close|terminate|open|get_status))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="3" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Pspell Functions -->
                <zone name="identifier.function.support.pspell">
                	<starts-with>
                		<expression>(?i)\b(pspell_(s(tore_replacement|uggest|ave_wordlist)|c(heck|onfig_(save_repl|create|ignore|d(ict_dir|ata_dir)|personal|r(untogether|epl)|mode)|lear_session)|new(_(config|personal))?|add_to_(session|personal)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="11" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Quot_print Functions -->
                <zone name="identifier.function.support.quot_print">
                	<starts-with>
                		<expression>(?i)\b(quoted_printable_decode)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Rand Functions -->
                <zone name="identifier.function.support.rand">
                	<starts-with>
                		<expression>(?i)\b((srand|getrandmax|rand|mt_(srand|getrandmax|rand)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="4" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Readline Functions -->
                <zone name="identifier.function.support.readline">
                	<starts-with>
                		<expression>(?i)\b(readline(_(c(ompletion_function|allback_(handler_(install|remove)|read_char)|lear_history)|info|on_new_line|write_history|list_history|add_history|re(display|ad_history)))?)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="8" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Recode Functions -->
                <zone name="identifier.function.support.recode">
                	<starts-with>
                		<expression>(?i)\b(recode_(string|file))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="3" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Reg Functions -->
                <zone name="identifier.function.support.reg">
                	<starts-with>
                		<expression>(?i)\b((s(plit(i)?|ql_regcase)|ereg(i(_replace)?|_replace)?))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="7" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Session Functions -->
                <zone name="identifier.function.support.session">
                	<starts-with>
                		<expression>(?i)\b(session_(s(tart|et_(save_handler|cookie_params)|ave_path)|cache_(expire|limiter)|name|i(s_registered|d)|de(stroy|code)|un(set|register)|encode|write_close|reg(ister|enerate_id)|get_cookie_params|module_name))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="10" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Shmop Functions -->
                <zone name="identifier.function.support.shmop">
                	<starts-with>
                		<expression>(?i)\b(shmop_(size|close|delete|open|write|read))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="3" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Simplexml Functions -->
                <zone name="identifier.function.support.simplexml">
                	<starts-with>
                		<expression>(?i)\b(simplexml_(import_dom|load_(string|file)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="4" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Skeleton Functions -->
                <zone name="identifier.function.support.skeleton">
                	<starts-with>
                		<expression>(?i)\b(confirm_extname_compiled)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Snmp Functions -->
                <zone name="identifier.function.support.snmp">
                	<starts-with>
                		<expression>(?i)\b((snmp(set|2_(set|walk|real_walk|get(next)?)|3_(set|walk|real_walk|get(next)?)|_(set_(oid_output_format|enum_print|valueretrieval|quick_print)|read_mib|get_(valueretrieval|quick_print))|walk|realwalk|get(next)?)|php_snmpv3))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="12" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Sockets Functions -->
                <zone name="identifier.function.support.sockets">
                	<starts-with>
                		<expression>(?i)\b(socket_(s(hutdown|trerror|e(nd(to)?|t_(nonblock|option|block)|lect))|c(onnect|l(ose|ear_error)|reate(_(pair|listen))?)|write|l(isten|ast_error)|accept|get(sockname|_option|peername)|re(cv(from)?|ad)|bind))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="15" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Soundex Functions -->
                <zone name="identifier.function.support.soundex">
                	<starts-with>
                		<expression>(?i)\b(soundex)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Spl_iterators Functions -->
                <zone name="identifier.function.support.spl_iterators">
                	<starts-with>
                		<expression>(?i)\b(iterator_(count|to_array|apply))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="3" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Sqlite Functions -->
                <zone name="identifier.function.support.sqlite">
                	<starts-with>
                		<expression>(?i)\b(sqlite_(has_prev|s(ingle_query|eek)|n(um_(fields|rows)|ext)|c(hanges|olumn|urrent|lose|reate_(function|aggregate))|open|u(nbuffered_query|df_(decode_binary|encode_binary))|e(scape_string|rror_string|xec)|p(open|rev)|key|valid|query|f(ield_name|etch_(single|column_types|object|a(ll|rray))|actory)|l(ib(encoding|version)|ast_(insert_rowid|error))|array_query|rewind|busy_timeout))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="18" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Streamsfuns Functions -->
                <zone name="identifier.function.support.streamsfuncs">
                	<starts-with>
                		<expression>(?i)\b(stream_(s(ocket_(s(hutdown|e(ndto|rver))|client|enable_crypto|pair|accept|recvfrom|get_name)|e(t_(timeout|write_buffer|blocking)|lect))|co(ntext_(set_(option|params)|create|get_(default|options))|py_to_stream)|filter_(prepend|append|remove)|get_(contents|transports|line|wrappers|meta_data)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="15" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- String Functions -->
                <zone name="identifier.function.support.string">
                	<starts-with>
                		<expression>(?i)\b((hebrev(c)?|s(scanf|imilar_text|tr(s(tr|pn)|natc(asecmp|mp)|c(hr|spn|oll)|i(str|p(slashes|cslashes|os|_tags))|t(o(upper|k|lower)|r)|_(s(huffle|plit)|ireplace|pad|word_count|r(ot13|ep(eat|lace)))|p(os|brk)|r(chr|ipos|ev|pos))|ubstr(_(co(unt|mpare)|replace))?|etlocale)|c(h(unk_split|r)|ount_chars)|nl(2br|_langinfo)|implode|trim|ord|dirname|uc(first|words)|join|pa(thinfo|rse_str)|explode|quotemeta|add(slashes|cslashes)|wordwrap|l(trim|ocaleconv)|rtrim|money_format|b(in2hex|asename)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="30" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Syslog Functions -->
                <zone name="identifier.function.support.syslog">
                	<starts-with>
                		<expression>(?i)\b((syslog|closelog|openlog|define_syslog_variables))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="3" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Sysvmsg Functions -->
                <zone name="identifier.function.support.sysvmsg">
                	<starts-with>
                		<expression>(?i)\b(msg_(s(tat_queue|e(nd|t_queue))|re(ceive|move_queue)|get_queue))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="6" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Sysvsem Functions -->
                <zone name="identifier.function.support.sysvsem">
                	<starts-with>
                		<expression>(?i)\b(sem_(acquire|re(lease|move)|get))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="4" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Sysvshm Functions -->
                <zone name="identifier.function.support.sysvshm">
                	<starts-with>
                		<expression>(?i)\b(shm_(detach|put_var|attach|get_var|remove(_var)?))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="4" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Text Functions -->
                <zone name="identifier.function.support.text">
                	<starts-with>
                		<expression>(?i)\b(dom_text_(split_text|is_whitespace_in_element_content|replace_whole_text))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="3" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Tidy Functions -->
                <zone name="identifier.function.support.tidy">
                	<starts-with>
                		<expression>(?i)\b(tidy_(c(onfig_count|lean_repair)|is_x(html|ml)|diagnose|error_count|parse_(string|file)|access_count|warning_count|repair_(string|file)|get(opt|_(h(tml(_ver)?|ead)|status|config|o(utput|pt_doc)|error_buffer|r(oot|elease)|body))))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="13" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Tokenizer Functions -->
                <zone name="identifier.function.support.tokenizer">
                	<starts-with>
                		<expression>(?i)\b(token_(name|get_all))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="3" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Type Functions -->
                <zone name="identifier.function.support.type">
                	<starts-with>
                		<expression>(?i)\b((s(trval|ettype)|i(s_(s(calar|tring)|callable|nu(ll|meric)|object|float|array|long|resource|bool)|ntval)|floatval|gettype))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="8" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Uniqid Functions -->
                <zone name="identifier.function.support.uniqid">
                	<starts-with>
                		<expression>(?i)\b(uniqid)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Url Functions -->
                <zone name="identifier.function.support.url">
                	<starts-with>
                		<expression>(?i)\b((url(decode|encode)|parse_url|get_headers|rawurl(decode|encode)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="5" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- User_filters Functions -->
                <zone name="identifier.function.support.user_filters">
                	<starts-with>
                		<expression>(?i)\b(stream_(filter_register|get_filters|bucket_(new|prepend|append|make_writeable)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="4" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Userdatahandler Functions -->
                <zone name="identifier.function.support.userdatahandler">
                	<starts-with>
                		<expression>(?i)\b(dom_userdatahandler_handle)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Userspace Functions -->
                <zone name="identifier.function.support.userspace">
                	<starts-with>
                		<expression>(?i)\b(stream_wrapper_(unregister|re(store|gister)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="4" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Uuencode Functions -->
                <zone name="identifier.function.support.uuencode">
                	<starts-with>
                		<expression>(?i)\b(convert_uu(decode|encode))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="3" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Var Functions -->
                <zone name="identifier.function.support.var">
                	<starts-with>
                		<expression>(?i)\b((serialize|debug_zval_dump|unserialize|var_(dump|export)|memory_get_(usage|peak_usage)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="5" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Versioning Functions -->
                <zone name="identifier.function.support.versioning">
                	<starts-with>
                		<expression>(?i)\b(version_compare)(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="2" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Wddx Functions -->
                <zone name="identifier.function.support.wddx">
                	<starts-with>
                		<expression>(?i)\b(wddx_(serialize_va(lue|rs)|deserialize|packet_(start|end)|add_vars))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="5" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Xml Functions -->
                <zone name="identifier.function.support.xml">
                	<starts-with>
                		<expression>(?i)\b((utf8_(decode|encode)|xml_(set_(start_namespace_decl_handler|notation_decl_handler|character_data_handler|default_handler|object|unparsed_entity_decl_handler|processing_instruction_handler|e(nd_namespace_decl_handler|lement_handler|xternal_entity_ref_handler))|error_string|parse(_into_struct|r_(set_option|create(_ns)?|free|get_option))?|get_(current_(column_number|line_number|byte_index)|error_code))))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="12" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Xpath Functions -->
                <zone name="identifier.function.support.xpath">
                	<starts-with>
                		<expression>(?i)\b(dom_xpath_(evaluate|query|register_ns))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="3" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- Xsltprocessor Functions -->
                <zone name="identifier.function.support.xsltprocessor">
                	<starts-with>
                		<expression>(?i)\b(xsl_xsltprocessor_(has_exslt_support|set_parameter|transform_to_(doc|uri|xml)|import_stylesheet|re(gister_php_functions|move_parameter)|get_parameter))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="5" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>
                
                <!-- zlib Functions -->
                <zone name="identifier.function.support.zlib">
                	<starts-with>
                		<expression>(?i)\b((ob_gzhandler|zlib_get_coding_type|readgzfile|gz(compress|inflate|deflate|open|uncompress|encode|file)))(\()</expression>
                		<capture number="1" name="name" />
                		<capture number="4" name="delimiter.balanced.parenthesis.begin" />
                	</starts-with>
                	<ends-with>
                		<expression>\)</expression>
                	</ends-with>
                	<subzones>
                		<include collection="identifier.function.subzones" />
                	</subzones>
                </zone>          
        </collection>
        
	</library>
</syntax>